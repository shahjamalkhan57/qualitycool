"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-scroll-parallax";
exports.ids = ["vendor-chunks/react-scroll-parallax"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-scroll-parallax/dist/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/react-scroll-parallax/dist/index.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./react-scroll-parallax.cjs.development.js */ \"(ssr)/./node_modules/react-scroll-parallax/dist/react-scroll-parallax.cjs.development.js\")\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVhY3Qtc2Nyb2xsLXBhcmFsbGF4L2Rpc3QvaW5kZXguanMiLCJtYXBwaW5ncyI6IjtBQUNZOztBQUVaLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSxrTEFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0anMvLi9ub2RlX21vZHVsZXMvcmVhY3Qtc2Nyb2xsLXBhcmFsbGF4L2Rpc3QvaW5kZXguanM/Yzk3MCJdLCJzb3VyY2VzQ29udGVudCI6WyJcbid1c2Ugc3RyaWN0J1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vcmVhY3Qtc2Nyb2xsLXBhcmFsbGF4LmNqcy5wcm9kdWN0aW9uLm1pbi5qcycpXG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vcmVhY3Qtc2Nyb2xsLXBhcmFsbGF4LmNqcy5kZXZlbG9wbWVudC5qcycpXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-scroll-parallax/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/react-scroll-parallax/dist/react-scroll-parallax.cjs.development.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/react-scroll-parallax/dist/react-scroll-parallax.cjs.development.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar parallaxController = __webpack_require__(/*! parallax-controller */ \"(ssr)/./node_modules/parallax-controller/dist/index.js\");\nvar React = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nvar React__default = _interopDefault(React);\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction removeUndefinedObjectKeys(obj) {\n  Object.keys(obj).forEach(function (key) {\n    return obj[key] === undefined && delete obj[key];\n  });\n  return obj;\n}\n\nvar _excluded = [\"disabled\", \"easing\", \"endScroll\", \"onChange\", \"onEnter\", \"onExit\", \"onProgressChange\", \"opacity\", \"rootMargin\", \"rotate\", \"rotateX\", \"rotateY\", \"rotateZ\", \"scale\", \"scaleX\", \"scaleY\", \"scaleZ\", \"shouldAlwaysCompleteAnimation\", \"shouldDisableScalingTranslations\", \"speed\", \"startScroll\", \"targetElement\", \"translateX\", \"translateY\"];\nfunction getIsolatedParallaxProps(props) {\n  var disabled = props.disabled,\n      easing = props.easing,\n      endScroll = props.endScroll,\n      onChange = props.onChange,\n      onEnter = props.onEnter,\n      onExit = props.onExit,\n      onProgressChange = props.onProgressChange,\n      opacity = props.opacity,\n      rootMargin = props.rootMargin,\n      rotate = props.rotate,\n      rotateX = props.rotateX,\n      rotateY = props.rotateY,\n      rotateZ = props.rotateZ,\n      scale = props.scale,\n      scaleX = props.scaleX,\n      scaleY = props.scaleY,\n      scaleZ = props.scaleZ,\n      shouldAlwaysCompleteAnimation = props.shouldAlwaysCompleteAnimation,\n      shouldDisableScalingTranslations = props.shouldDisableScalingTranslations,\n      speed = props.speed,\n      startScroll = props.startScroll,\n      targetElement = props.targetElement,\n      translateX = props.translateX,\n      translateY = props.translateY,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var parallaxProps = removeUndefinedObjectKeys({\n    disabled: disabled,\n    easing: easing,\n    endScroll: endScroll,\n    onChange: onChange,\n    onEnter: onEnter,\n    onExit: onExit,\n    onProgressChange: onProgressChange,\n    opacity: opacity,\n    rootMargin: rootMargin,\n    rotate: rotate,\n    rotateX: rotateX,\n    rotateY: rotateY,\n    rotateZ: rotateZ,\n    scale: scale,\n    scaleX: scaleX,\n    scaleY: scaleY,\n    scaleZ: scaleZ,\n    shouldAlwaysCompleteAnimation: shouldAlwaysCompleteAnimation,\n    shouldDisableScalingTranslations: shouldDisableScalingTranslations,\n    speed: speed,\n    startScroll: startScroll,\n    targetElement: targetElement,\n    translateX: translateX,\n    translateY: translateY\n  });\n  return {\n    parallaxProps: parallaxProps,\n    rest: rest\n  };\n}\n\nfunction useVerifyController(controller) {\n  React.useEffect(function () {\n    var isServer = typeof window === 'undefined'; // Make sure the provided controller is an instance of the Parallax Controller\n\n    var isInstance = controller instanceof parallaxController.ParallaxController; // Throw if neither context or global is available\n\n    if (!isServer && !controller && !isInstance) {\n      throw new Error(\"Must wrap your application's <Parallax /> components in a <ParallaxProvider />.\");\n    }\n  }, [controller]);\n}\n\nvar ParallaxContext = /*#__PURE__*/React__default.createContext(null);\n\nfunction useParallaxController() {\n  var parallaxController = React.useContext(ParallaxContext);\n  var isServer = typeof window === 'undefined';\n\n  if (isServer) {\n    return null;\n  }\n\n  if (!parallaxController) {\n    throw new Error('Could not find `react-scroll-parallax` context value. Please ensure the component is wrapped in a <ParallaxProvider>');\n  }\n\n  return parallaxController;\n}\n\nfunction useParallax(props) {\n  var controller = useParallaxController();\n  var ref = React.useRef(null);\n\n  var _getIsolatedParallaxP = getIsolatedParallaxProps(props),\n      parallaxProps = _getIsolatedParallaxP.parallaxProps;\n\n  useVerifyController(controller);\n\n  var _useState = React.useState(),\n      element = _useState[0],\n      setElement = _useState[1]; // create element\n\n\n  React.useEffect(function () {\n    var newElement;\n\n    if (ref.current instanceof HTMLElement) {\n      var options = {\n        el: ref.current,\n        props: parallaxProps\n      };\n      newElement = controller == null ? void 0 : controller.createElement(options);\n      setElement(newElement);\n    } else {\n      throw new Error('You must assign the ref returned by the useParallax() hook to an HTML Element.');\n    }\n\n    return function () {\n      if (newElement) {\n        controller == null ? void 0 : controller.removeElementById(newElement.id);\n      }\n    };\n  }, []); // update element\n\n  React.useEffect(function () {\n    if (element) {\n      if (props.disabled) {\n        controller == null ? void 0 : controller.resetElementStyles(element);\n        controller == null ? void 0 : controller.updateElementPropsById(element.id, parallaxProps);\n      } else {\n        controller == null ? void 0 : controller.updateElementPropsById(element.id, parallaxProps);\n      }\n    }\n  }, [props.disabled, props.easing, props.endScroll, props.onChange, props.onEnter, props.onExit, props.onProgressChange, props.opacity, props.rootMargin, props.rotate, props.rotateX, props.rotateY, props.rotateZ, props.scale, props.scaleX, props.scaleY, props.scaleZ, props.shouldAlwaysCompleteAnimation, props.shouldDisableScalingTranslations, props.speed, props.startScroll, props.targetElement, props.translateX, props.translateY]);\n  return {\n    ref: ref,\n    controller: controller,\n    element: element\n  };\n}\n\nfunction Parallax(props) {\n  var _getIsolatedParallaxP = getIsolatedParallaxProps(props),\n      parallaxProps = _getIsolatedParallaxP.parallaxProps,\n      rest = _getIsolatedParallaxP.rest;\n\n  var _useParallax = useParallax(parallaxProps),\n      ref = _useParallax.ref;\n\n  return React__default.createElement(\"div\", Object.assign({\n    ref: ref\n  }, rest), props.children);\n}\n\nvar FALLBACK_RECT = {\n  height: 0\n};\nfunction getExpandedStyle(layer) {\n  if (Array.isArray(layer.translateY)) {\n    var translateYStart = parallaxController.parseValueAndUnit(layer.translateY[0]);\n    var translateYEnd = parallaxController.parseValueAndUnit(layer.translateY[1]);\n\n    if (translateYStart.unit === 'px' && translateYEnd.unit === 'px') {\n      return {\n        top: Math.abs(translateYEnd.value) * -1 + \"px\",\n        bottom: Math.abs(translateYStart.value) * -1 + \"px\"\n      };\n    }\n\n    if (translateYStart.unit === '%' && translateYEnd.unit === '%') {\n      var _layer$targetElement$, _layer$targetElement;\n\n      var clientRect = (_layer$targetElement$ = (_layer$targetElement = layer.targetElement) == null ? void 0 : _layer$targetElement.getBoundingClientRect()) != null ? _layer$targetElement$ : FALLBACK_RECT;\n      var top = Math.abs(clientRect.height * 0.01 * translateYEnd.value) * -1;\n      var bottom = Math.abs(clientRect.height * 0.01 * translateYStart.value) * -1;\n      return {\n        top: top + \"px\",\n        bottom: bottom + \"px\"\n      };\n    }\n  }\n\n  if (layer.speed) {\n    var speed = layer.speed || 0;\n    var absSpeed = Math.abs(speed) * 10 * -1;\n    return {\n      top: absSpeed + \"px\",\n      bottom: absSpeed + \"px\"\n    };\n  }\n\n  return {};\n}\n\nfunction getImageStyle(layer) {\n  return layer.image ? {\n    backgroundImage: \"url(\" + layer.image + \")\",\n    backgroundPosition: 'center',\n    backgroundSize: 'cover'\n  } : {};\n}\n\nvar _excluded$1 = [\"children\", \"disabled\", \"style\", \"expanded\", \"image\", \"testId\"];\nvar absoluteStyle = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0\n};\nvar ParallaxBannerLayer = function ParallaxBannerLayer(props) {\n  var _getIsolatedParallaxP = getIsolatedParallaxProps(props),\n      parallaxProps = _getIsolatedParallaxP.parallaxProps,\n      rest = _getIsolatedParallaxP.rest;\n\n  var style = rest.style,\n      _rest$expanded = rest.expanded,\n      expanded = _rest$expanded === void 0 ? true : _rest$expanded,\n      testId = rest.testId,\n      divProps = _objectWithoutPropertiesLoose(rest, _excluded$1);\n\n  var imageStyle = getImageStyle(props);\n  var expandedStyle = expanded ? getExpandedStyle(props) : {};\n  var parallax = useParallax(_extends({\n    targetElement: props.targetElement,\n    shouldDisableScalingTranslations: true\n  }, parallaxProps));\n  return React__default.createElement(\"div\", Object.assign({\n    \"data-testid\": testId,\n    ref: parallax.ref,\n    style: _extends({}, imageStyle, absoluteStyle, expandedStyle, style)\n  }, divProps), rest.children);\n};\n\nvar _excluded$2 = [\"disabled\", \"style\", \"layers\"];\nvar containerStyle = {\n  position: 'relative',\n  overflow: 'hidden',\n  width: '100%'\n};\nvar ParallaxBanner = function ParallaxBanner(props) {\n  var _useState = React.useState(null),\n      targetElement = _useState[0],\n      setTargetElement = _useState[1];\n\n  var containerRef = React.useRef(null);\n  React.useEffect(function () {\n    setTargetElement(containerRef.current);\n  }, []);\n\n  var rootStyle = props.style,\n      _props$layers = props.layers,\n      layers = _props$layers === void 0 ? [] : _props$layers,\n      rootRest = _objectWithoutPropertiesLoose(props, _excluded$2);\n\n  function renderLayers() {\n    if (targetElement) {\n      var shouldUseLayers = layers && layers.length > 0;\n\n      if (shouldUseLayers) {\n        return layers.map(function (layer, i) {\n          return React__default.createElement(ParallaxBannerLayer, Object.assign({}, layer, {\n            targetElement: targetElement,\n            key: \"layer-\" + i,\n            testId: \"layer-\" + i\n          }));\n        });\n      }\n    }\n\n    return null;\n  }\n\n  function renderChildren() {\n    if (targetElement) {\n      return React__default.Children.map(props.children, function (child) {\n        var item = child; // adds the targetElement prop to any ParallaxBannerLayer components\n\n        if ((item == null ? void 0 : item.type) === ParallaxBannerLayer) {\n          var clone = React__default.cloneElement(item, {\n            targetElement: targetElement\n          });\n          return clone;\n        }\n\n        return child;\n      });\n    }\n\n    return null;\n  }\n\n  return React__default.createElement(\"div\", Object.assign({\n    ref: containerRef,\n    style: _extends({}, containerStyle, rootStyle)\n  }, rootRest), renderLayers(), renderChildren());\n};\n\nvar createController = function createController(options) {\n  // Don't initialize on the server\n  var isServer = typeof window === 'undefined';\n\n  if (!isServer) {\n    // Must not be the server so kick it off...\n    return parallaxController.ParallaxController.init(options);\n  }\n\n  return null;\n};\n\nfunction ParallaxProvider(props) {\n  var controller = React.useRef(null);\n\n  if (!controller.current) {\n    controller.current = createController({\n      scrollAxis: props.scrollAxis || parallaxController.ScrollAxis.vertical,\n      scrollContainer: props.scrollContainer,\n      disabled: props.isDisabled\n    });\n  } // update scroll container\n\n\n  React.useEffect(function () {\n    if (props.scrollContainer && controller.current) {\n      controller.current.updateScrollContainer(props.scrollContainer);\n    }\n  }, [props.scrollContainer, controller.current]); // disable/enable parallax\n\n  React.useEffect(function () {\n    if (props.isDisabled && controller.current) {\n      controller.current.disableParallaxController();\n    }\n\n    if (!props.isDisabled && controller.current) {\n      controller.current.enableParallaxController();\n    }\n  }, [props.isDisabled, controller.current]); // remove the controller when unmounting\n\n  React.useEffect(function () {\n    return function () {\n      (controller == null ? void 0 : controller.current) && (controller == null ? void 0 : controller.current.destroy());\n    };\n  }, []);\n  return React__default.createElement(ParallaxContext.Provider, {\n    value: controller.current\n  }, props.children);\n}\n\nObject.defineProperty(exports, \"EasingPreset\", ({\n  enumerable: true,\n  get: function () {\n    return parallaxController.EasingPreset;\n  }\n}));\nexports.Parallax = Parallax;\nexports.ParallaxBanner = ParallaxBanner;\nexports.ParallaxBannerLayer = ParallaxBannerLayer;\nexports.ParallaxContext = ParallaxContext;\nexports.ParallaxProvider = ParallaxProvider;\nexports.useParallax = useParallax;\nexports.useParallaxController = useParallaxController;\n//# sourceMappingURL=react-scroll-parallax.cjs.development.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVhY3Qtc2Nyb2xsLXBhcmFsbGF4L2Rpc3QvcmVhY3Qtc2Nyb2xsLXBhcmFsbGF4LmNqcy5kZXZlbG9wbWVudC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdELGdDQUFnQzs7QUFFaEMseUJBQXlCLG1CQUFPLENBQUMsbUZBQXFCO0FBQ3RELFlBQVksbUJBQU8sQ0FBQyx3R0FBTztBQUMzQjs7QUFFQTtBQUNBO0FBQ0Esb0JBQW9CLHNCQUFzQjtBQUMxQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsY0FBYyx1QkFBdUI7QUFDckM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esa0RBQWtEOztBQUVsRCxrRkFBa0Y7O0FBRWxGO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxpQ0FBaUM7OztBQUdqQztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUcsT0FBTzs7QUFFVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QixHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLG1GQUFtRjtBQUNuRjtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1gsU0FBUztBQUNUO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEI7O0FBRTFCO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBOztBQUVBO0FBQ0EsT0FBTztBQUNQOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QixHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLElBQUk7OztBQUdKO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRyxnREFBZ0Q7O0FBRW5EO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUcsMkNBQTJDOztBQUU5QztBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBLGdEQUErQztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsRUFBQztBQUNGLGdCQUFnQjtBQUNoQixzQkFBc0I7QUFDdEIsMkJBQTJCO0FBQzNCLHVCQUF1QjtBQUN2Qix3QkFBd0I7QUFDeEIsbUJBQW1CO0FBQ25CLDZCQUE2QjtBQUM3QiIsInNvdXJjZXMiOlsid2VicGFjazovL25leHRqcy8uL25vZGVfbW9kdWxlcy9yZWFjdC1zY3JvbGwtcGFyYWxsYXgvZGlzdC9yZWFjdC1zY3JvbGwtcGFyYWxsYXguY2pzLmRldmVsb3BtZW50LmpzPzJjNmQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG5mdW5jdGlvbiBfaW50ZXJvcERlZmF1bHQgKGV4KSB7IHJldHVybiAoZXggJiYgKHR5cGVvZiBleCA9PT0gJ29iamVjdCcpICYmICdkZWZhdWx0JyBpbiBleCkgPyBleFsnZGVmYXVsdCddIDogZXg7IH1cblxudmFyIHBhcmFsbGF4Q29udHJvbGxlciA9IHJlcXVpcmUoJ3BhcmFsbGF4LWNvbnRyb2xsZXInKTtcbnZhciBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG52YXIgUmVhY3RfX2RlZmF1bHQgPSBfaW50ZXJvcERlZmF1bHQoUmVhY3QpO1xuXG5mdW5jdGlvbiBfZXh0ZW5kcygpIHtcbiAgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHtcbiAgICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTtcblxuICAgICAgZm9yICh2YXIga2V5IGluIHNvdXJjZSkge1xuICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkge1xuICAgICAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdGFyZ2V0O1xuICB9O1xuXG4gIHJldHVybiBfZXh0ZW5kcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufVxuXG5mdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShzb3VyY2UsIGV4Y2x1ZGVkKSB7XG4gIGlmIChzb3VyY2UgPT0gbnVsbCkgcmV0dXJuIHt9O1xuICB2YXIgdGFyZ2V0ID0ge307XG4gIHZhciBzb3VyY2VLZXlzID0gT2JqZWN0LmtleXMoc291cmNlKTtcbiAgdmFyIGtleSwgaTtcblxuICBmb3IgKGkgPSAwOyBpIDwgc291cmNlS2V5cy5sZW5ndGg7IGkrKykge1xuICAgIGtleSA9IHNvdXJjZUtleXNbaV07XG4gICAgaWYgKGV4Y2x1ZGVkLmluZGV4T2Yoa2V5KSA+PSAwKSBjb250aW51ZTtcbiAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICB9XG5cbiAgcmV0dXJuIHRhcmdldDtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlVW5kZWZpbmVkT2JqZWN0S2V5cyhvYmopIHtcbiAgT2JqZWN0LmtleXMob2JqKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICByZXR1cm4gb2JqW2tleV0gPT09IHVuZGVmaW5lZCAmJiBkZWxldGUgb2JqW2tleV07XG4gIH0pO1xuICByZXR1cm4gb2JqO1xufVxuXG52YXIgX2V4Y2x1ZGVkID0gW1wiZGlzYWJsZWRcIiwgXCJlYXNpbmdcIiwgXCJlbmRTY3JvbGxcIiwgXCJvbkNoYW5nZVwiLCBcIm9uRW50ZXJcIiwgXCJvbkV4aXRcIiwgXCJvblByb2dyZXNzQ2hhbmdlXCIsIFwib3BhY2l0eVwiLCBcInJvb3RNYXJnaW5cIiwgXCJyb3RhdGVcIiwgXCJyb3RhdGVYXCIsIFwicm90YXRlWVwiLCBcInJvdGF0ZVpcIiwgXCJzY2FsZVwiLCBcInNjYWxlWFwiLCBcInNjYWxlWVwiLCBcInNjYWxlWlwiLCBcInNob3VsZEFsd2F5c0NvbXBsZXRlQW5pbWF0aW9uXCIsIFwic2hvdWxkRGlzYWJsZVNjYWxpbmdUcmFuc2xhdGlvbnNcIiwgXCJzcGVlZFwiLCBcInN0YXJ0U2Nyb2xsXCIsIFwidGFyZ2V0RWxlbWVudFwiLCBcInRyYW5zbGF0ZVhcIiwgXCJ0cmFuc2xhdGVZXCJdO1xuZnVuY3Rpb24gZ2V0SXNvbGF0ZWRQYXJhbGxheFByb3BzKHByb3BzKSB7XG4gIHZhciBkaXNhYmxlZCA9IHByb3BzLmRpc2FibGVkLFxuICAgICAgZWFzaW5nID0gcHJvcHMuZWFzaW5nLFxuICAgICAgZW5kU2Nyb2xsID0gcHJvcHMuZW5kU2Nyb2xsLFxuICAgICAgb25DaGFuZ2UgPSBwcm9wcy5vbkNoYW5nZSxcbiAgICAgIG9uRW50ZXIgPSBwcm9wcy5vbkVudGVyLFxuICAgICAgb25FeGl0ID0gcHJvcHMub25FeGl0LFxuICAgICAgb25Qcm9ncmVzc0NoYW5nZSA9IHByb3BzLm9uUHJvZ3Jlc3NDaGFuZ2UsXG4gICAgICBvcGFjaXR5ID0gcHJvcHMub3BhY2l0eSxcbiAgICAgIHJvb3RNYXJnaW4gPSBwcm9wcy5yb290TWFyZ2luLFxuICAgICAgcm90YXRlID0gcHJvcHMucm90YXRlLFxuICAgICAgcm90YXRlWCA9IHByb3BzLnJvdGF0ZVgsXG4gICAgICByb3RhdGVZID0gcHJvcHMucm90YXRlWSxcbiAgICAgIHJvdGF0ZVogPSBwcm9wcy5yb3RhdGVaLFxuICAgICAgc2NhbGUgPSBwcm9wcy5zY2FsZSxcbiAgICAgIHNjYWxlWCA9IHByb3BzLnNjYWxlWCxcbiAgICAgIHNjYWxlWSA9IHByb3BzLnNjYWxlWSxcbiAgICAgIHNjYWxlWiA9IHByb3BzLnNjYWxlWixcbiAgICAgIHNob3VsZEFsd2F5c0NvbXBsZXRlQW5pbWF0aW9uID0gcHJvcHMuc2hvdWxkQWx3YXlzQ29tcGxldGVBbmltYXRpb24sXG4gICAgICBzaG91bGREaXNhYmxlU2NhbGluZ1RyYW5zbGF0aW9ucyA9IHByb3BzLnNob3VsZERpc2FibGVTY2FsaW5nVHJhbnNsYXRpb25zLFxuICAgICAgc3BlZWQgPSBwcm9wcy5zcGVlZCxcbiAgICAgIHN0YXJ0U2Nyb2xsID0gcHJvcHMuc3RhcnRTY3JvbGwsXG4gICAgICB0YXJnZXRFbGVtZW50ID0gcHJvcHMudGFyZ2V0RWxlbWVudCxcbiAgICAgIHRyYW5zbGF0ZVggPSBwcm9wcy50cmFuc2xhdGVYLFxuICAgICAgdHJhbnNsYXRlWSA9IHByb3BzLnRyYW5zbGF0ZVksXG4gICAgICByZXN0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UocHJvcHMsIF9leGNsdWRlZCk7XG5cbiAgdmFyIHBhcmFsbGF4UHJvcHMgPSByZW1vdmVVbmRlZmluZWRPYmplY3RLZXlzKHtcbiAgICBkaXNhYmxlZDogZGlzYWJsZWQsXG4gICAgZWFzaW5nOiBlYXNpbmcsXG4gICAgZW5kU2Nyb2xsOiBlbmRTY3JvbGwsXG4gICAgb25DaGFuZ2U6IG9uQ2hhbmdlLFxuICAgIG9uRW50ZXI6IG9uRW50ZXIsXG4gICAgb25FeGl0OiBvbkV4aXQsXG4gICAgb25Qcm9ncmVzc0NoYW5nZTogb25Qcm9ncmVzc0NoYW5nZSxcbiAgICBvcGFjaXR5OiBvcGFjaXR5LFxuICAgIHJvb3RNYXJnaW46IHJvb3RNYXJnaW4sXG4gICAgcm90YXRlOiByb3RhdGUsXG4gICAgcm90YXRlWDogcm90YXRlWCxcbiAgICByb3RhdGVZOiByb3RhdGVZLFxuICAgIHJvdGF0ZVo6IHJvdGF0ZVosXG4gICAgc2NhbGU6IHNjYWxlLFxuICAgIHNjYWxlWDogc2NhbGVYLFxuICAgIHNjYWxlWTogc2NhbGVZLFxuICAgIHNjYWxlWjogc2NhbGVaLFxuICAgIHNob3VsZEFsd2F5c0NvbXBsZXRlQW5pbWF0aW9uOiBzaG91bGRBbHdheXNDb21wbGV0ZUFuaW1hdGlvbixcbiAgICBzaG91bGREaXNhYmxlU2NhbGluZ1RyYW5zbGF0aW9uczogc2hvdWxkRGlzYWJsZVNjYWxpbmdUcmFuc2xhdGlvbnMsXG4gICAgc3BlZWQ6IHNwZWVkLFxuICAgIHN0YXJ0U2Nyb2xsOiBzdGFydFNjcm9sbCxcbiAgICB0YXJnZXRFbGVtZW50OiB0YXJnZXRFbGVtZW50LFxuICAgIHRyYW5zbGF0ZVg6IHRyYW5zbGF0ZVgsXG4gICAgdHJhbnNsYXRlWTogdHJhbnNsYXRlWVxuICB9KTtcbiAgcmV0dXJuIHtcbiAgICBwYXJhbGxheFByb3BzOiBwYXJhbGxheFByb3BzLFxuICAgIHJlc3Q6IHJlc3RcbiAgfTtcbn1cblxuZnVuY3Rpb24gdXNlVmVyaWZ5Q29udHJvbGxlcihjb250cm9sbGVyKSB7XG4gIFJlYWN0LnVzZUVmZmVjdChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGlzU2VydmVyID0gdHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCc7IC8vIE1ha2Ugc3VyZSB0aGUgcHJvdmlkZWQgY29udHJvbGxlciBpcyBhbiBpbnN0YW5jZSBvZiB0aGUgUGFyYWxsYXggQ29udHJvbGxlclxuXG4gICAgdmFyIGlzSW5zdGFuY2UgPSBjb250cm9sbGVyIGluc3RhbmNlb2YgcGFyYWxsYXhDb250cm9sbGVyLlBhcmFsbGF4Q29udHJvbGxlcjsgLy8gVGhyb3cgaWYgbmVpdGhlciBjb250ZXh0IG9yIGdsb2JhbCBpcyBhdmFpbGFibGVcblxuICAgIGlmICghaXNTZXJ2ZXIgJiYgIWNvbnRyb2xsZXIgJiYgIWlzSW5zdGFuY2UpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIk11c3Qgd3JhcCB5b3VyIGFwcGxpY2F0aW9uJ3MgPFBhcmFsbGF4IC8+IGNvbXBvbmVudHMgaW4gYSA8UGFyYWxsYXhQcm92aWRlciAvPi5cIik7XG4gICAgfVxuICB9LCBbY29udHJvbGxlcl0pO1xufVxuXG52YXIgUGFyYWxsYXhDb250ZXh0ID0gLyojX19QVVJFX18qL1JlYWN0X19kZWZhdWx0LmNyZWF0ZUNvbnRleHQobnVsbCk7XG5cbmZ1bmN0aW9uIHVzZVBhcmFsbGF4Q29udHJvbGxlcigpIHtcbiAgdmFyIHBhcmFsbGF4Q29udHJvbGxlciA9IFJlYWN0LnVzZUNvbnRleHQoUGFyYWxsYXhDb250ZXh0KTtcbiAgdmFyIGlzU2VydmVyID0gdHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCc7XG5cbiAgaWYgKGlzU2VydmVyKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICBpZiAoIXBhcmFsbGF4Q29udHJvbGxlcikge1xuICAgIHRocm93IG5ldyBFcnJvcignQ291bGQgbm90IGZpbmQgYHJlYWN0LXNjcm9sbC1wYXJhbGxheGAgY29udGV4dCB2YWx1ZS4gUGxlYXNlIGVuc3VyZSB0aGUgY29tcG9uZW50IGlzIHdyYXBwZWQgaW4gYSA8UGFyYWxsYXhQcm92aWRlcj4nKTtcbiAgfVxuXG4gIHJldHVybiBwYXJhbGxheENvbnRyb2xsZXI7XG59XG5cbmZ1bmN0aW9uIHVzZVBhcmFsbGF4KHByb3BzKSB7XG4gIHZhciBjb250cm9sbGVyID0gdXNlUGFyYWxsYXhDb250cm9sbGVyKCk7XG4gIHZhciByZWYgPSBSZWFjdC51c2VSZWYobnVsbCk7XG5cbiAgdmFyIF9nZXRJc29sYXRlZFBhcmFsbGF4UCA9IGdldElzb2xhdGVkUGFyYWxsYXhQcm9wcyhwcm9wcyksXG4gICAgICBwYXJhbGxheFByb3BzID0gX2dldElzb2xhdGVkUGFyYWxsYXhQLnBhcmFsbGF4UHJvcHM7XG5cbiAgdXNlVmVyaWZ5Q29udHJvbGxlcihjb250cm9sbGVyKTtcblxuICB2YXIgX3VzZVN0YXRlID0gUmVhY3QudXNlU3RhdGUoKSxcbiAgICAgIGVsZW1lbnQgPSBfdXNlU3RhdGVbMF0sXG4gICAgICBzZXRFbGVtZW50ID0gX3VzZVN0YXRlWzFdOyAvLyBjcmVhdGUgZWxlbWVudFxuXG5cbiAgUmVhY3QudXNlRWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgbmV3RWxlbWVudDtcblxuICAgIGlmIChyZWYuY3VycmVudCBpbnN0YW5jZW9mIEhUTUxFbGVtZW50KSB7XG4gICAgICB2YXIgb3B0aW9ucyA9IHtcbiAgICAgICAgZWw6IHJlZi5jdXJyZW50LFxuICAgICAgICBwcm9wczogcGFyYWxsYXhQcm9wc1xuICAgICAgfTtcbiAgICAgIG5ld0VsZW1lbnQgPSBjb250cm9sbGVyID09IG51bGwgPyB2b2lkIDAgOiBjb250cm9sbGVyLmNyZWF0ZUVsZW1lbnQob3B0aW9ucyk7XG4gICAgICBzZXRFbGVtZW50KG5ld0VsZW1lbnQpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1lvdSBtdXN0IGFzc2lnbiB0aGUgcmVmIHJldHVybmVkIGJ5IHRoZSB1c2VQYXJhbGxheCgpIGhvb2sgdG8gYW4gSFRNTCBFbGVtZW50LicpO1xuICAgIH1cblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAobmV3RWxlbWVudCkge1xuICAgICAgICBjb250cm9sbGVyID09IG51bGwgPyB2b2lkIDAgOiBjb250cm9sbGVyLnJlbW92ZUVsZW1lbnRCeUlkKG5ld0VsZW1lbnQuaWQpO1xuICAgICAgfVxuICAgIH07XG4gIH0sIFtdKTsgLy8gdXBkYXRlIGVsZW1lbnRcblxuICBSZWFjdC51c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgIGlmIChlbGVtZW50KSB7XG4gICAgICBpZiAocHJvcHMuZGlzYWJsZWQpIHtcbiAgICAgICAgY29udHJvbGxlciA9PSBudWxsID8gdm9pZCAwIDogY29udHJvbGxlci5yZXNldEVsZW1lbnRTdHlsZXMoZWxlbWVudCk7XG4gICAgICAgIGNvbnRyb2xsZXIgPT0gbnVsbCA/IHZvaWQgMCA6IGNvbnRyb2xsZXIudXBkYXRlRWxlbWVudFByb3BzQnlJZChlbGVtZW50LmlkLCBwYXJhbGxheFByb3BzKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnRyb2xsZXIgPT0gbnVsbCA/IHZvaWQgMCA6IGNvbnRyb2xsZXIudXBkYXRlRWxlbWVudFByb3BzQnlJZChlbGVtZW50LmlkLCBwYXJhbGxheFByb3BzKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIFtwcm9wcy5kaXNhYmxlZCwgcHJvcHMuZWFzaW5nLCBwcm9wcy5lbmRTY3JvbGwsIHByb3BzLm9uQ2hhbmdlLCBwcm9wcy5vbkVudGVyLCBwcm9wcy5vbkV4aXQsIHByb3BzLm9uUHJvZ3Jlc3NDaGFuZ2UsIHByb3BzLm9wYWNpdHksIHByb3BzLnJvb3RNYXJnaW4sIHByb3BzLnJvdGF0ZSwgcHJvcHMucm90YXRlWCwgcHJvcHMucm90YXRlWSwgcHJvcHMucm90YXRlWiwgcHJvcHMuc2NhbGUsIHByb3BzLnNjYWxlWCwgcHJvcHMuc2NhbGVZLCBwcm9wcy5zY2FsZVosIHByb3BzLnNob3VsZEFsd2F5c0NvbXBsZXRlQW5pbWF0aW9uLCBwcm9wcy5zaG91bGREaXNhYmxlU2NhbGluZ1RyYW5zbGF0aW9ucywgcHJvcHMuc3BlZWQsIHByb3BzLnN0YXJ0U2Nyb2xsLCBwcm9wcy50YXJnZXRFbGVtZW50LCBwcm9wcy50cmFuc2xhdGVYLCBwcm9wcy50cmFuc2xhdGVZXSk7XG4gIHJldHVybiB7XG4gICAgcmVmOiByZWYsXG4gICAgY29udHJvbGxlcjogY29udHJvbGxlcixcbiAgICBlbGVtZW50OiBlbGVtZW50XG4gIH07XG59XG5cbmZ1bmN0aW9uIFBhcmFsbGF4KHByb3BzKSB7XG4gIHZhciBfZ2V0SXNvbGF0ZWRQYXJhbGxheFAgPSBnZXRJc29sYXRlZFBhcmFsbGF4UHJvcHMocHJvcHMpLFxuICAgICAgcGFyYWxsYXhQcm9wcyA9IF9nZXRJc29sYXRlZFBhcmFsbGF4UC5wYXJhbGxheFByb3BzLFxuICAgICAgcmVzdCA9IF9nZXRJc29sYXRlZFBhcmFsbGF4UC5yZXN0O1xuXG4gIHZhciBfdXNlUGFyYWxsYXggPSB1c2VQYXJhbGxheChwYXJhbGxheFByb3BzKSxcbiAgICAgIHJlZiA9IF91c2VQYXJhbGxheC5yZWY7XG5cbiAgcmV0dXJuIFJlYWN0X19kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgT2JqZWN0LmFzc2lnbih7XG4gICAgcmVmOiByZWZcbiAgfSwgcmVzdCksIHByb3BzLmNoaWxkcmVuKTtcbn1cblxudmFyIEZBTExCQUNLX1JFQ1QgPSB7XG4gIGhlaWdodDogMFxufTtcbmZ1bmN0aW9uIGdldEV4cGFuZGVkU3R5bGUobGF5ZXIpIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkobGF5ZXIudHJhbnNsYXRlWSkpIHtcbiAgICB2YXIgdHJhbnNsYXRlWVN0YXJ0ID0gcGFyYWxsYXhDb250cm9sbGVyLnBhcnNlVmFsdWVBbmRVbml0KGxheWVyLnRyYW5zbGF0ZVlbMF0pO1xuICAgIHZhciB0cmFuc2xhdGVZRW5kID0gcGFyYWxsYXhDb250cm9sbGVyLnBhcnNlVmFsdWVBbmRVbml0KGxheWVyLnRyYW5zbGF0ZVlbMV0pO1xuXG4gICAgaWYgKHRyYW5zbGF0ZVlTdGFydC51bml0ID09PSAncHgnICYmIHRyYW5zbGF0ZVlFbmQudW5pdCA9PT0gJ3B4Jykge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgdG9wOiBNYXRoLmFicyh0cmFuc2xhdGVZRW5kLnZhbHVlKSAqIC0xICsgXCJweFwiLFxuICAgICAgICBib3R0b206IE1hdGguYWJzKHRyYW5zbGF0ZVlTdGFydC52YWx1ZSkgKiAtMSArIFwicHhcIlxuICAgICAgfTtcbiAgICB9XG5cbiAgICBpZiAodHJhbnNsYXRlWVN0YXJ0LnVuaXQgPT09ICclJyAmJiB0cmFuc2xhdGVZRW5kLnVuaXQgPT09ICclJykge1xuICAgICAgdmFyIF9sYXllciR0YXJnZXRFbGVtZW50JCwgX2xheWVyJHRhcmdldEVsZW1lbnQ7XG5cbiAgICAgIHZhciBjbGllbnRSZWN0ID0gKF9sYXllciR0YXJnZXRFbGVtZW50JCA9IChfbGF5ZXIkdGFyZ2V0RWxlbWVudCA9IGxheWVyLnRhcmdldEVsZW1lbnQpID09IG51bGwgPyB2b2lkIDAgOiBfbGF5ZXIkdGFyZ2V0RWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSkgIT0gbnVsbCA/IF9sYXllciR0YXJnZXRFbGVtZW50JCA6IEZBTExCQUNLX1JFQ1Q7XG4gICAgICB2YXIgdG9wID0gTWF0aC5hYnMoY2xpZW50UmVjdC5oZWlnaHQgKiAwLjAxICogdHJhbnNsYXRlWUVuZC52YWx1ZSkgKiAtMTtcbiAgICAgIHZhciBib3R0b20gPSBNYXRoLmFicyhjbGllbnRSZWN0LmhlaWdodCAqIDAuMDEgKiB0cmFuc2xhdGVZU3RhcnQudmFsdWUpICogLTE7XG4gICAgICByZXR1cm4ge1xuICAgICAgICB0b3A6IHRvcCArIFwicHhcIixcbiAgICAgICAgYm90dG9tOiBib3R0b20gKyBcInB4XCJcbiAgICAgIH07XG4gICAgfVxuICB9XG5cbiAgaWYgKGxheWVyLnNwZWVkKSB7XG4gICAgdmFyIHNwZWVkID0gbGF5ZXIuc3BlZWQgfHwgMDtcbiAgICB2YXIgYWJzU3BlZWQgPSBNYXRoLmFicyhzcGVlZCkgKiAxMCAqIC0xO1xuICAgIHJldHVybiB7XG4gICAgICB0b3A6IGFic1NwZWVkICsgXCJweFwiLFxuICAgICAgYm90dG9tOiBhYnNTcGVlZCArIFwicHhcIlxuICAgIH07XG4gIH1cblxuICByZXR1cm4ge307XG59XG5cbmZ1bmN0aW9uIGdldEltYWdlU3R5bGUobGF5ZXIpIHtcbiAgcmV0dXJuIGxheWVyLmltYWdlID8ge1xuICAgIGJhY2tncm91bmRJbWFnZTogXCJ1cmwoXCIgKyBsYXllci5pbWFnZSArIFwiKVwiLFxuICAgIGJhY2tncm91bmRQb3NpdGlvbjogJ2NlbnRlcicsXG4gICAgYmFja2dyb3VuZFNpemU6ICdjb3ZlcidcbiAgfSA6IHt9O1xufVxuXG52YXIgX2V4Y2x1ZGVkJDEgPSBbXCJjaGlsZHJlblwiLCBcImRpc2FibGVkXCIsIFwic3R5bGVcIiwgXCJleHBhbmRlZFwiLCBcImltYWdlXCIsIFwidGVzdElkXCJdO1xudmFyIGFic29sdXRlU3R5bGUgPSB7XG4gIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICB0b3A6IDAsXG4gIGxlZnQ6IDAsXG4gIHJpZ2h0OiAwLFxuICBib3R0b206IDBcbn07XG52YXIgUGFyYWxsYXhCYW5uZXJMYXllciA9IGZ1bmN0aW9uIFBhcmFsbGF4QmFubmVyTGF5ZXIocHJvcHMpIHtcbiAgdmFyIF9nZXRJc29sYXRlZFBhcmFsbGF4UCA9IGdldElzb2xhdGVkUGFyYWxsYXhQcm9wcyhwcm9wcyksXG4gICAgICBwYXJhbGxheFByb3BzID0gX2dldElzb2xhdGVkUGFyYWxsYXhQLnBhcmFsbGF4UHJvcHMsXG4gICAgICByZXN0ID0gX2dldElzb2xhdGVkUGFyYWxsYXhQLnJlc3Q7XG5cbiAgdmFyIHN0eWxlID0gcmVzdC5zdHlsZSxcbiAgICAgIF9yZXN0JGV4cGFuZGVkID0gcmVzdC5leHBhbmRlZCxcbiAgICAgIGV4cGFuZGVkID0gX3Jlc3QkZXhwYW5kZWQgPT09IHZvaWQgMCA/IHRydWUgOiBfcmVzdCRleHBhbmRlZCxcbiAgICAgIHRlc3RJZCA9IHJlc3QudGVzdElkLFxuICAgICAgZGl2UHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShyZXN0LCBfZXhjbHVkZWQkMSk7XG5cbiAgdmFyIGltYWdlU3R5bGUgPSBnZXRJbWFnZVN0eWxlKHByb3BzKTtcbiAgdmFyIGV4cGFuZGVkU3R5bGUgPSBleHBhbmRlZCA/IGdldEV4cGFuZGVkU3R5bGUocHJvcHMpIDoge307XG4gIHZhciBwYXJhbGxheCA9IHVzZVBhcmFsbGF4KF9leHRlbmRzKHtcbiAgICB0YXJnZXRFbGVtZW50OiBwcm9wcy50YXJnZXRFbGVtZW50LFxuICAgIHNob3VsZERpc2FibGVTY2FsaW5nVHJhbnNsYXRpb25zOiB0cnVlXG4gIH0sIHBhcmFsbGF4UHJvcHMpKTtcbiAgcmV0dXJuIFJlYWN0X19kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgT2JqZWN0LmFzc2lnbih7XG4gICAgXCJkYXRhLXRlc3RpZFwiOiB0ZXN0SWQsXG4gICAgcmVmOiBwYXJhbGxheC5yZWYsXG4gICAgc3R5bGU6IF9leHRlbmRzKHt9LCBpbWFnZVN0eWxlLCBhYnNvbHV0ZVN0eWxlLCBleHBhbmRlZFN0eWxlLCBzdHlsZSlcbiAgfSwgZGl2UHJvcHMpLCByZXN0LmNoaWxkcmVuKTtcbn07XG5cbnZhciBfZXhjbHVkZWQkMiA9IFtcImRpc2FibGVkXCIsIFwic3R5bGVcIiwgXCJsYXllcnNcIl07XG52YXIgY29udGFpbmVyU3R5bGUgPSB7XG4gIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxuICBvdmVyZmxvdzogJ2hpZGRlbicsXG4gIHdpZHRoOiAnMTAwJSdcbn07XG52YXIgUGFyYWxsYXhCYW5uZXIgPSBmdW5jdGlvbiBQYXJhbGxheEJhbm5lcihwcm9wcykge1xuICB2YXIgX3VzZVN0YXRlID0gUmVhY3QudXNlU3RhdGUobnVsbCksXG4gICAgICB0YXJnZXRFbGVtZW50ID0gX3VzZVN0YXRlWzBdLFxuICAgICAgc2V0VGFyZ2V0RWxlbWVudCA9IF91c2VTdGF0ZVsxXTtcblxuICB2YXIgY29udGFpbmVyUmVmID0gUmVhY3QudXNlUmVmKG51bGwpO1xuICBSZWFjdC51c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgIHNldFRhcmdldEVsZW1lbnQoY29udGFpbmVyUmVmLmN1cnJlbnQpO1xuICB9LCBbXSk7XG5cbiAgdmFyIHJvb3RTdHlsZSA9IHByb3BzLnN0eWxlLFxuICAgICAgX3Byb3BzJGxheWVycyA9IHByb3BzLmxheWVycyxcbiAgICAgIGxheWVycyA9IF9wcm9wcyRsYXllcnMgPT09IHZvaWQgMCA/IFtdIDogX3Byb3BzJGxheWVycyxcbiAgICAgIHJvb3RSZXN0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UocHJvcHMsIF9leGNsdWRlZCQyKTtcblxuICBmdW5jdGlvbiByZW5kZXJMYXllcnMoKSB7XG4gICAgaWYgKHRhcmdldEVsZW1lbnQpIHtcbiAgICAgIHZhciBzaG91bGRVc2VMYXllcnMgPSBsYXllcnMgJiYgbGF5ZXJzLmxlbmd0aCA+IDA7XG5cbiAgICAgIGlmIChzaG91bGRVc2VMYXllcnMpIHtcbiAgICAgICAgcmV0dXJuIGxheWVycy5tYXAoZnVuY3Rpb24gKGxheWVyLCBpKSB7XG4gICAgICAgICAgcmV0dXJuIFJlYWN0X19kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoUGFyYWxsYXhCYW5uZXJMYXllciwgT2JqZWN0LmFzc2lnbih7fSwgbGF5ZXIsIHtcbiAgICAgICAgICAgIHRhcmdldEVsZW1lbnQ6IHRhcmdldEVsZW1lbnQsXG4gICAgICAgICAgICBrZXk6IFwibGF5ZXItXCIgKyBpLFxuICAgICAgICAgICAgdGVzdElkOiBcImxheWVyLVwiICsgaVxuICAgICAgICAgIH0pKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICBmdW5jdGlvbiByZW5kZXJDaGlsZHJlbigpIHtcbiAgICBpZiAodGFyZ2V0RWxlbWVudCkge1xuICAgICAgcmV0dXJuIFJlYWN0X19kZWZhdWx0LkNoaWxkcmVuLm1hcChwcm9wcy5jaGlsZHJlbiwgZnVuY3Rpb24gKGNoaWxkKSB7XG4gICAgICAgIHZhciBpdGVtID0gY2hpbGQ7IC8vIGFkZHMgdGhlIHRhcmdldEVsZW1lbnQgcHJvcCB0byBhbnkgUGFyYWxsYXhCYW5uZXJMYXllciBjb21wb25lbnRzXG5cbiAgICAgICAgaWYgKChpdGVtID09IG51bGwgPyB2b2lkIDAgOiBpdGVtLnR5cGUpID09PSBQYXJhbGxheEJhbm5lckxheWVyKSB7XG4gICAgICAgICAgdmFyIGNsb25lID0gUmVhY3RfX2RlZmF1bHQuY2xvbmVFbGVtZW50KGl0ZW0sIHtcbiAgICAgICAgICAgIHRhcmdldEVsZW1lbnQ6IHRhcmdldEVsZW1lbnRcbiAgICAgICAgICB9KTtcbiAgICAgICAgICByZXR1cm4gY2xvbmU7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gY2hpbGQ7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIHJldHVybiBSZWFjdF9fZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIE9iamVjdC5hc3NpZ24oe1xuICAgIHJlZjogY29udGFpbmVyUmVmLFxuICAgIHN0eWxlOiBfZXh0ZW5kcyh7fSwgY29udGFpbmVyU3R5bGUsIHJvb3RTdHlsZSlcbiAgfSwgcm9vdFJlc3QpLCByZW5kZXJMYXllcnMoKSwgcmVuZGVyQ2hpbGRyZW4oKSk7XG59O1xuXG52YXIgY3JlYXRlQ29udHJvbGxlciA9IGZ1bmN0aW9uIGNyZWF0ZUNvbnRyb2xsZXIob3B0aW9ucykge1xuICAvLyBEb24ndCBpbml0aWFsaXplIG9uIHRoZSBzZXJ2ZXJcbiAgdmFyIGlzU2VydmVyID0gdHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCc7XG5cbiAgaWYgKCFpc1NlcnZlcikge1xuICAgIC8vIE11c3Qgbm90IGJlIHRoZSBzZXJ2ZXIgc28ga2ljayBpdCBvZmYuLi5cbiAgICByZXR1cm4gcGFyYWxsYXhDb250cm9sbGVyLlBhcmFsbGF4Q29udHJvbGxlci5pbml0KG9wdGlvbnMpO1xuICB9XG5cbiAgcmV0dXJuIG51bGw7XG59O1xuXG5mdW5jdGlvbiBQYXJhbGxheFByb3ZpZGVyKHByb3BzKSB7XG4gIHZhciBjb250cm9sbGVyID0gUmVhY3QudXNlUmVmKG51bGwpO1xuXG4gIGlmICghY29udHJvbGxlci5jdXJyZW50KSB7XG4gICAgY29udHJvbGxlci5jdXJyZW50ID0gY3JlYXRlQ29udHJvbGxlcih7XG4gICAgICBzY3JvbGxBeGlzOiBwcm9wcy5zY3JvbGxBeGlzIHx8IHBhcmFsbGF4Q29udHJvbGxlci5TY3JvbGxBeGlzLnZlcnRpY2FsLFxuICAgICAgc2Nyb2xsQ29udGFpbmVyOiBwcm9wcy5zY3JvbGxDb250YWluZXIsXG4gICAgICBkaXNhYmxlZDogcHJvcHMuaXNEaXNhYmxlZFxuICAgIH0pO1xuICB9IC8vIHVwZGF0ZSBzY3JvbGwgY29udGFpbmVyXG5cblxuICBSZWFjdC51c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgIGlmIChwcm9wcy5zY3JvbGxDb250YWluZXIgJiYgY29udHJvbGxlci5jdXJyZW50KSB7XG4gICAgICBjb250cm9sbGVyLmN1cnJlbnQudXBkYXRlU2Nyb2xsQ29udGFpbmVyKHByb3BzLnNjcm9sbENvbnRhaW5lcik7XG4gICAgfVxuICB9LCBbcHJvcHMuc2Nyb2xsQ29udGFpbmVyLCBjb250cm9sbGVyLmN1cnJlbnRdKTsgLy8gZGlzYWJsZS9lbmFibGUgcGFyYWxsYXhcblxuICBSZWFjdC51c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgIGlmIChwcm9wcy5pc0Rpc2FibGVkICYmIGNvbnRyb2xsZXIuY3VycmVudCkge1xuICAgICAgY29udHJvbGxlci5jdXJyZW50LmRpc2FibGVQYXJhbGxheENvbnRyb2xsZXIoKTtcbiAgICB9XG5cbiAgICBpZiAoIXByb3BzLmlzRGlzYWJsZWQgJiYgY29udHJvbGxlci5jdXJyZW50KSB7XG4gICAgICBjb250cm9sbGVyLmN1cnJlbnQuZW5hYmxlUGFyYWxsYXhDb250cm9sbGVyKCk7XG4gICAgfVxuICB9LCBbcHJvcHMuaXNEaXNhYmxlZCwgY29udHJvbGxlci5jdXJyZW50XSk7IC8vIHJlbW92ZSB0aGUgY29udHJvbGxlciB3aGVuIHVubW91bnRpbmdcblxuICBSZWFjdC51c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAoY29udHJvbGxlciA9PSBudWxsID8gdm9pZCAwIDogY29udHJvbGxlci5jdXJyZW50KSAmJiAoY29udHJvbGxlciA9PSBudWxsID8gdm9pZCAwIDogY29udHJvbGxlci5jdXJyZW50LmRlc3Ryb3koKSk7XG4gICAgfTtcbiAgfSwgW10pO1xuICByZXR1cm4gUmVhY3RfX2RlZmF1bHQuY3JlYXRlRWxlbWVudChQYXJhbGxheENvbnRleHQuUHJvdmlkZXIsIHtcbiAgICB2YWx1ZTogY29udHJvbGxlci5jdXJyZW50XG4gIH0sIHByb3BzLmNoaWxkcmVuKTtcbn1cblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdFYXNpbmdQcmVzZXQnLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBwYXJhbGxheENvbnRyb2xsZXIuRWFzaW5nUHJlc2V0O1xuICB9XG59KTtcbmV4cG9ydHMuUGFyYWxsYXggPSBQYXJhbGxheDtcbmV4cG9ydHMuUGFyYWxsYXhCYW5uZXIgPSBQYXJhbGxheEJhbm5lcjtcbmV4cG9ydHMuUGFyYWxsYXhCYW5uZXJMYXllciA9IFBhcmFsbGF4QmFubmVyTGF5ZXI7XG5leHBvcnRzLlBhcmFsbGF4Q29udGV4dCA9IFBhcmFsbGF4Q29udGV4dDtcbmV4cG9ydHMuUGFyYWxsYXhQcm92aWRlciA9IFBhcmFsbGF4UHJvdmlkZXI7XG5leHBvcnRzLnVzZVBhcmFsbGF4ID0gdXNlUGFyYWxsYXg7XG5leHBvcnRzLnVzZVBhcmFsbGF4Q29udHJvbGxlciA9IHVzZVBhcmFsbGF4Q29udHJvbGxlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlYWN0LXNjcm9sbC1wYXJhbGxheC5janMuZGV2ZWxvcG1lbnQuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-scroll-parallax/dist/react-scroll-parallax.cjs.development.js\n");

/***/ })

};
;